@page "/Page1"

<h1>This is an interactive webpage!</h1>
Click PC Name and this webpage will display the current time, updated each second!
This is a developer preview page to demonstrate the capabilities of this web app.

<p>OS Version: @OSinfo</p>
<p>PC Name: @PCname</p>
<!--  <button class="btn btn-primary" @onclick="IncrementCount">Click me2</button> -->
<button class="btn btn-primary" @onclick="GetTime">OS Version</button>
<br />
<button class="btn btn-primary" @onclick="GetPCName">PC Name</button>
<br />
<a href="https://github.com/rpriest403/RJP-Demo/raw/master/RJP-Demo.exe">Download Demo App</a>
<br />
<a href="https://github.com/rpriest403/RJP-Demo/raw/master/RJP-DemoW7.exe">Download Demo App (for Windows 7)</a>
<br />
<a href="https://github.com/rpriest403/RJP-Demo/raw/master/RJP-DemoW8.exe">Download Demo App (for Windows 8 and above)</a>
<br />
<a href="https://github.com/rpriest403/RJP-Demo/raw/master/chrome-win8.reg">for Chrome users on Windows 7/8</a>
<br />
Please donate to support the development of my programs:
<form action="https://www.paypal.com/donate" method="post" target="_top">
    <!-- Identify your business so that you can collect the payments. -->
    <input type="hidden" name="business" value="ryanjpriest@cox.net">
    <!-- Specify details about the contribution -->
    <input type="hidden" name="no_recurring" value="0">
    <input type="hidden" name="item_name" value="Donations">
    <input type="hidden" name="currency_code" value="USD">
    <!-- Display the payment button. -->
    <input type="image" name="submit" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" alt="Donate">
    <img alt="" width="1" height="1" src="https://www.paypalobjects.com/en_US/i/scr/pixel.gif">
</form>

@code {
    private string OSinfo;
    static private string PCname;
    System.Timers.Timer aTimer = new System.Timers.Timer(1000);

    private void GetTime()
    {
        string OSver = Environment.OSVersion.VersionString.ToString();
        OSinfo = OSver;

    }
    private void GetPCName()
    {
        aTimer = new System.Timers.Timer(1000);
        aTimer.Elapsed += CountDownTimer;
        aTimer.Enabled = true;
        
      string name = Environment.MachineName;
        string time = DateTime.Now.ToString();
        PCname = name + " at " + time;
   }
   public void CountDownTimer(Object source, System.Timers.ElapsedEventArgs e)
    {
        string name = Environment.MachineName;
        string time = DateTime.Now.ToString();
        PCname = name + " at " + time;
        InvokeAsync(StateHasChanged);
    }


}
